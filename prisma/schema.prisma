generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String?
  email     String    @unique
  password  String
  role      Role      @default(EDITOR)
  isActive  Boolean   @default(true)
  lastLogin DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Service {
  id          String   @id @default(cuid())
  title       String
  description String
  icon        String?
  image       String?
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  advantages  String[]
  timeline    Json?

  @@index([isActive])
  @@index([order])
}

model Fabric {
  id              String          @id @default(cuid())
  name            String
  description     String
  image           String?
  category        String
  purpose         String[]
  colors          String[]
  price           Float?
  properties      String[]
  isActive        Boolean         @default(true)
  order           Int             @default(0)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  recommendations String[]
  details         FabricDetails?
  gallery         FabricGallery[]

  @@index([category])
  @@index([isActive])
  @@index([order])
}

model FabricDetails {
  id          String   @id @default(cuid())
  fabricId    String   @unique
  composition String?
  width       Float?
  weight      Float?
  care        String[]
  origin      String?
  description String?
  fabric      Fabric   @relation(fields: [fabricId], references: [id], onDelete: Cascade)
}

model FabricGallery {
  id       String  @id @default(cuid())
  fabricId String
  url      String
  alt      String?
  fabric   Fabric  @relation(fields: [fabricId], references: [id], onDelete: Cascade)
}

model GalleryItem {
  id            String                @id @default(cuid())
  src           String
  alt           String
  category      String
  description   String
  isNew         Boolean               @default(false)
  order         Int                   @default(0)
  isActive      Boolean               @default(true)
  createdAt     DateTime              @default(now())
  updatedAt     DateTime              @updatedAt
  client        String?
  date          String?
  materials     String[]
  process       String?
  relatedImages GalleryRelatedImage[]

  @@index([category])
  @@index([isActive])
  @@index([order])
  @@index([isNew])
}

model GalleryRelatedImage {
  id            String      @id @default(cuid())
  galleryItemId String
  src           String
  alt           String?
  galleryItem   GalleryItem @relation(fields: [galleryItemId], references: [id], onDelete: Cascade)
}

model Testimonial {
  id         String   @id @default(cuid())
  name       String
  position   String?
  avatar     String?
  text       String
  rating     Int
  date       String?
  category   String?
  isVerified Boolean  @default(false)
  isActive   Boolean  @default(true)
  order      Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([isActive])
  @@index([order])
}

model Price {
  id          String   @id @default(cuid())
  service     String
  price       String
  description String?
  category    String?
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model FAQ {
  id        String   @id @default(cuid())
  category  String
  title     String?
  question  String
  answer    String
  isActive  Boolean  @default(true)
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  dislikes  Int      @default(0)
  likes     Int      @default(0)
}

model Contact {
  id             String        @id @default(cuid())
  name           String
  email          String
  phone          String?
  subject        String
  message        String
  status         ContactStatus @default(NEW)
  assignedTo     String?
  notes          String?
  fileAttachment String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Workshop {
  id          String   @id @default(cuid())
  name        String
  address     String
  description String?
  directions  String?
  coordinates Json?
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Settings {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  category    String   @default("general")
  description String?
  type        String   @default("string")

  @@index([category])
}

model TeamMember {
  id          String   @id @default(cuid())
  name        String
  position    String
  bio         String
  photo       String
  socialLinks Json?
  location    String?
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Event {
  id            String   @id @default(cuid())
  title         String
  description   String?
  startDate     DateTime
  endDate       DateTime
  category      String
  clientName    String?
  clientContact String?
  clientEmail   String?
  status        String
  isAllDay      Boolean  @default(false)
  notes         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  color         String   @default("#3b82f6")
  location      String?
  priority      Int      @default(1)

  @@index([startDate])
  @@index([status])
  @@index([category])
}

enum Role {
  ADMIN
  EDITOR
}

enum ContactStatus {
  NEW
  IN_PROGRESS
  COMPLETED
  CANCELED
}
