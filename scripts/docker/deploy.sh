#!/bin/bash
set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
ENVIRONMENT=${1:-"development"}
COMPOSE_FILE="docker-compose.yml"
ENV_FILE=".env"

echo -e "${GREEN}üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ DressCutur –≤ —Å—Ä–µ–¥–µ: ${ENVIRONMENT}${NC}"

# –í—ã–±–∏—Ä–∞–µ–º compose —Ñ–∞–π–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ä–µ–¥—ã
case $ENVIRONMENT in
    "production"|"prod")
        COMPOSE_FILE="docker-compose.prod.yml"
        ENV_FILE=".env.production"
        ;;
    "staging")
        COMPOSE_FILE="docker-compose.staging.yml"
        ENV_FILE=".env.staging"
        ;;
    "development"|"dev")
        COMPOSE_FILE="docker-compose.yml"
        ENV_FILE=".env.development"
        ;;
    *)
        echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ä–µ–¥–∞: ${ENVIRONMENT}${NC}"
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ä–µ–¥—ã: development, staging, production"
        exit 1
        ;;
esac

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ compose —Ñ–∞–π–ª–∞
if [ ! -f "$COMPOSE_FILE" ]; then
    echo -e "${RED}‚ùå Compose —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $COMPOSE_FILE${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f "$ENV_FILE" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $ENV_FILE${NC}"
    echo "–°–æ–∑–¥–∞–µ–º –∏–∑ .env.example..."
    
    if [ -f ".env.example" ]; then
        cp .env.example "$ENV_FILE"
        echo -e "${YELLOW}üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ $ENV_FILE${NC}"
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å..."
    else
        echo -e "${RED}‚ùå .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Docker
if ! docker info > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
check_health() {
    local max_attempts=30
    local attempt=1
    
    echo -e "${BLUE}üè• –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
    
    while [ $attempt -le $max_attempts ]; do
        if docker-compose -f "$COMPOSE_FILE" --env-file "$ENV_FILE" ps -q | xargs docker inspect --format='{{.State.Health.Status}}' | grep -q "healthy"; then
            echo -e "${GREEN}‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–¥–æ—Ä–æ–≤—ã!${NC}"
            return 0
        fi
        
        echo -e "${YELLOW}‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts - –æ–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
        sleep 10
        ((attempt++))
    done
    
    echo -e "${RED}‚ùå –°–µ—Ä–≤–∏—Å—ã –Ω–µ –≥–æ—Ç–æ–≤—ã –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫${NC}"
    return 1
}

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...${NC}"
docker-compose -f "$COMPOSE_FILE" --env-file "$ENV_FILE" down

# –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if [ "$ENVIRONMENT" = "production" ]; then
    echo -e "${YELLOW}üßπ –û—á–∏—â–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã...${NC}"
    docker system prune -f
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è volumes
echo -e "${BLUE}üìÅ –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...${NC}"
mkdir -p ./backups ./logs/nginx ./nginx/ssl

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã...${NC}"
docker-compose -f "$COMPOSE_FILE" --env-file "$ENV_FILE" up -d

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤
if check_health; then
    echo -e "${GREEN}‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!${NC}"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
    echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:${NC}"
    docker-compose -f "$COMPOSE_FILE" --env-file "$ENV_FILE" ps
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    echo -e "${BLUE}üìã –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:${NC}"
    echo "‚Ä¢ –õ–æ–≥–∏: docker-compose -f $COMPOSE_FILE --env-file $ENV_FILE logs -f"
    echo "‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: docker-compose -f $COMPOSE_FILE --env-file $ENV_FILE down"
    echo "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å: docker-compose -f $COMPOSE_FILE --env-file $ENV_FILE restart"
    
    if [ "$ENVIRONMENT" = "production" ]; then
        echo "‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: https://your-domain.com"
    else
        echo "‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3000"
    fi
    
else
    echo -e "${RED}‚ùå –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏${NC}"
    echo -e "${YELLOW}üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:${NC}"
    docker-compose -f "$COMPOSE_FILE" --env-file "$ENV_FILE" logs
    exit 1
fi 